buildscript {
    ext.kotlin_version = '1.1.2-5'
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'net.minecrell.licenser' version '0.3'
    id "com.diffplug.gradle.spotless" version "3.4.0"
}

apply plugin: 'kotlin'
apply plugin: 'net.minecraftforge.gradle.forge'

version = "0.0.3-1.12"
group = "com.jjtparadox.barometer"
archivesBaseName = "barometer"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12-14.21.1.2387"
    runDir = "run"

    mappings = "snapshot_20170624" // Recommended by Forge
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'junit:junit:4.12'
    compile makeStart.outputs.files

    compile "io.github.lukehutch:fast-classpath-scanner:2.18.1"

    testCompile "org.mockito:mockito-core:2.+"
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

test {
    workingDir = { minecraft.runDir + "/test" }

    mkdir workingDir

    file("$workingDir/eula.txt").text = "eula=true"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

license {
    header = file('HEADER')
    newLine = false
    ext {
        name = project.name
        organization = 'jjtParadox'
        year = '2018'
    }

    sourceSets = [project.sourceSets.main] as Collection<SourceSet>
    exclude 'mcmod.info'
}

spotless {
    kotlin {
        ktlint('0.8.3')
        indentWithSpaces()
        trimTrailingWhitespace()
        endWithNewline()
    }
    java {
        removeUnusedImports()
        indentWithSpaces()
        trimTrailingWhitespace()
        endWithNewline()
    }
}
